{"version":3,"sources":["components/NavBar.tsx","components/HomePage.tsx","components/NotFoundPage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink.tsx","components/PersonInfo.tsx","components/PeopleTable.tsx","utils.tsx","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["NavBar","className","role","isActive","classNames","to","HomePage","NotFoundPage","Loader","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","name","slug","sex","PersonInfo","person","born","died","fatherName","motherName","mother","father","personSlug","mom","dad","PeopleTable","people","map","getPeopleWithParents","find","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useParams","getPeopleFromServer","peopleFromServer","useEffect","length","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.0c13c64b.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavBar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => classNames(\n              'navbar-item', { 'has-background-grey-lighter': isActive },\n            )}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => classNames(\n              'navbar-item', { 'has-background-grey-lighter': isActive },\n            )}\n            to=\"people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => {\n  return <h1 className=\"title\">Home Page</h1>;\n};\n","export const NotFoundPage = () => {\n  return <h1 className=\"title\">Page not found</h1>;\n};\n","import './Loader.scss';\r\n\r\nexport const Loader = () => (\r\n  <div className=\"Loader\" data-cy=\"loader\">\r\n    <div className=\"Loader__content\" />\r\n  </div>\r\n);\r\n","import { Person } from './types/Person';\r\n\r\n// eslint-disable-next-line max-len\r\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\r\n\r\nfunction wait(delay: number) {\r\n  return new Promise(resolve => setTimeout(resolve, delay));\r\n}\r\n\r\nexport function getPeople(): Promise<Person[]> {\r\n  // keep this delay for testing purpose\r\n  return wait(500)\r\n    .then(() => fetch(API_URL))\r\n    .then(response => response.json());\r\n}\r\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\n\ntype Props = {\n  name: string;\n  slug: string;\n  sex: string;\n};\n\nexport const PersonLink: React.FC<Props> = ({ name, slug, sex }) => {\n  return (\n    <Link\n      to={`../${slug}`}\n      className={classNames({ 'has-text-danger': sex === 'f' })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  person: Person;\n  slug: string;\n};\n\nexport const PersonInfo: React.FC<Props> = ({ person, slug }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    mother,\n    father,\n    slug: personSlug,\n  } = person;\n\n  const mom = motherName || '-';\n  const dad = fatherName || '-';\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': personSlug === slug,\n      })}\n    >\n      <td>\n        <PersonLink name={name} slug={personSlug} sex={sex} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <PersonLink name={mother.name} sex={mother.sex} slug={mother.slug} />\n        ) : (\n          mom\n        )}\n      </td>\n      <td>\n        {father ? (\n          <PersonLink name={father.name} sex={father.sex} slug={father.slug} />\n        ) : (\n          dad\n        )}\n      </td>\n    </tr>\n  );\n};\n","import { Person } from '../types';\nimport { PersonInfo } from './PersonInfo';\n\ntype Props = {\n  people: Person[],\n  slug: string,\n};\n\nexport const PeopleTable:React.FC<Props> = ({ people, slug }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => (\n          <PersonInfo key={person.slug} person={person} slug={slug} />\n        ))}\n      </tbody>\n    </table>\n\n  );\n};\n","import { Person } from './types/Person';\n\nexport const getPeopleWithParents = (people:Person[]): Person[] => {\n  return people.map(person => {\n    const mother = people.find(mom => mom.name === person.motherName);\n    const father = people.find(dad => dad.name === person.fatherName);\n\n    return {\n      ...person,\n      mother,\n      father,\n    };\n  });\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from './Loader';\nimport { getPeople } from '../api';\nimport { Person } from '../types/Person';\nimport { PeopleTable } from './PeopleTable';\nimport { getPeopleWithParents } from '../utils';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const { slug = '' } = useParams();\n\n  const getPeopleFromServer = async () => {\n    try {\n      setIsError(false);\n      setIsLoading(true);\n      const peopleFromServer = await getPeople();\n\n      if (peopleFromServer) {\n        setPeople(getPeopleWithParents(peopleFromServer));\n      }\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          <div className=\"block\">\n            <div className=\"box table-container\">\n              {people.length > 0 && <PeopleTable people={people} slug={slug} />}\n\n              {isLoading && <Loader />}\n\n              {isError && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {!people.length && !isError && !isLoading && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { NavBar } from './components/NavBar';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <NavBar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"/people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\n\r\nimport 'bulma/css/bulma.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\n\r\nimport { App } from './App';\r\n\r\ncreateRoot(document.getElementById('root') as HTMLDivElement)\r\n  .render(\r\n    <Router>\r\n      <App />\r\n    </Router>,\r\n  );\r\n"],"sourceRoot":""}